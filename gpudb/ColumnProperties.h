/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
#ifndef __GPUDB_COLUMN_PROPERTIES__H__
#define __GPUDB_COLUMN_PROPERTIES__H__

#include <string>


namespace gpudb
{
    namespace ColumnProperty
    {

        /**
         * Default property for all numeric and string type columns; makes the
         * column available for GPU queries.
         */
        extern const std::string DATA;


        /**
         * Valid only for 'string' columns. Enables full text search for string
         * columns. Can be set independently of *data* and *store_only*.
         */
        extern const std::string TEXT_SEARCH;


        /**
         * Persist the column value but do not make it available to queries
         * (e.g. /filter/bybox)-i.e. it is mutually exclusive to the 'data'
         * property. Any 'bytes' type column must have a 'store_only' property.
         * This property reduces system memory usage.
         */
        extern const std::string STORE_ONLY;


        /**
         * Works in conjunction with the 'data' property for string columns.
         * This property reduces system disk usage by disabling reverse string
         * lookups. Queries like /filter, /filter/bylist, and /filter/byvalue
         * work as usual but /aggregate/unique, /aggregate/groupby and
         * /get/records/bycolumn are not allowed on columns with this property.
         */
        extern const std::string DISK_OPTIMIZED;


        /**
         * Valid only for 'long' columns. Indicates that this field represents
         * a timestamp and will be provided in milliseconds since the Unix
         * epoch: 00:00:00 Jan 1 1970.
         */
        extern const std::string TIMESTAMP;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 1 character. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR1;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 2 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR2;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 4 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR4;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 8 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR8;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 16 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR16;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 32 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR32;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 64 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR64;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 128 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR128;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns. Strings with this property must be no longer
         * than 256 characters. This property cannot be combined with
         * *text_search*
         */
        extern const std::string CHAR256;


        /**
         * This property provides optimized memory and query performance for
         * int columns. Ints with this property must be between -128 and +127
         * (inclusive)
         */
        extern const std::string INT8;


        /**
         * This property provides optimized memory and query performance for
         * int columns. Ints with this property must be between -32768 and
         * +32767 (inclusive)
         */
        extern const std::string INT16;


        /**
         * This property provides optimized memory, disk and query performance
         * for string columns representing IPv4 addresses (i.e. 192.168.1.1).
         * Strings with this property must be of the form: A.B.C.D where A, B,
         * C and D are in the range of 0-255.
         */
        extern const std::string IPV4;


        /**
         * This property indicates that this column will be part of (or the
         * entire) primary key.
         */
        extern const std::string PRIMARY_KEY;


        /**
         * This property indicates that this column will be part of (or the
         * entire) shard key.
         */
        extern const std::string SHARD_KEY;


        /**
         * This property indicates that this column is nullable.
         */
        extern const std::string NULLABLE;


    } // end namespace ColumnProperty
} // end namespace gpudb


#endif // __GPUDB_COLUMN_PROPERTIES__H__
